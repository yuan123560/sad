{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%20%282%29/src/components/ChatSettings.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { QANYTHING_MODELS } from '@/lib/constants';\n\ninterface ChatSettingsProps {\n  onSettingsChange: (settings: ChatSettings) => void;\n  className?: string;\n}\n\nexport interface ChatSettings {\n  model: string;\n  maxToken: number;\n  hybridSearch: boolean;\n  networking: boolean;\n  sourceNeeded: boolean;\n  kbIds: string[];\n}\n\ninterface KnowledgeBase {\n  kbId: string;\n  kbName: string;\n  status: number;\n}\n\nexport default function ChatSettings({ onSettingsChange, className = '' }: ChatSettingsProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [settings, setSettings] = useState<ChatSettings>({\n    model: 'QAnything 4o mini',\n    maxToken: 1024,\n    hybridSearch: false,\n    networking: false, // 默认关闭联网，与示例保持一致\n    sourceNeeded: true,\n    kbIds: [],\n  });\n  const [knowledgeBases, setKnowledgeBases] = useState<KnowledgeBase[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  // 获取知识库列表\n  const fetchKnowledgeBases = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/qanything/kb-list');\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.knowledgeBases) {\n          setKnowledgeBases(data.knowledgeBases);\n\n          // 自动选择第一个有内容的知识库（status === 1）\n          const readyKb = data.knowledgeBases.find((kb: KnowledgeBase) => kb.status === 1);\n          if (readyKb && settings.kbIds.length === 0) {\n            console.log('Auto-selecting ready knowledge base:', readyKb.kbId, readyKb.kbName);\n            setSettings(prev => ({\n              ...prev,\n              kbIds: [readyKb.kbId]\n            }));\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Failed to fetch knowledge bases:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [settings.kbIds]);\n\n  useEffect(() => {\n    fetchKnowledgeBases();\n  }, [fetchKnowledgeBases]);\n\n  useEffect(() => {\n    onSettingsChange(settings);\n  }, [settings, onSettingsChange]);\n\n  const updateSetting = <K extends keyof ChatSettings>(\n    key: K,\n    value: ChatSettings[K]\n  ) => {\n    setSettings(prev => ({ ...prev, [key]: value }));\n  };\n\n  const toggleKnowledgeBase = (kbId: string) => {\n    setSettings(prev => ({\n      ...prev,\n      kbIds: prev.kbIds.includes(kbId)\n        ? prev.kbIds.filter(id => id !== kbId)\n        : [...prev.kbIds, kbId]\n    }));\n  };\n\n  return (\n    <div className={`relative ${className}`}>\n      {/* 设置按钮 */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-md transition-colors\"\n        title=\"聊天设置\"\n      >\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n        </svg>\n      </button>\n\n      {/* 设置面板 */}\n      {isOpen && (\n        <div className=\"absolute right-0 top-full mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\n          <div className=\"p-4\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">聊天设置</h3>\n              <button\n                onClick={() => setIsOpen(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            <div className=\"space-y-4\">\n              {/* 模型选择 */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  AI 模型\n                </label>\n                <select\n                  value={settings.model}\n                  onChange={(e) => updateSetting('model', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  {Object.entries(QANYTHING_MODELS).map(([key, model]) => (\n                    <option key={key} value={model.name}>\n                      {model.name} - {model.description}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              {/* 最大Token数 */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  最大Token数: {settings.maxToken}\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"512\"\n                  max=\"4096\"\n                  step=\"256\"\n                  value={settings.maxToken}\n                  onChange={(e) => updateSetting('maxToken', parseInt(e.target.value))}\n                  className=\"w-full\"\n                />\n                <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                  <span>512</span>\n                  <span>4096</span>\n                </div>\n              </div>\n\n              {/* 功能开关 */}\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between\">\n                  <label className=\"text-sm font-medium text-gray-700\">\n                    混合搜索\n                  </label>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.hybridSearch}\n                    onChange={(e) => updateSetting('hybridSearch', e.target.checked)}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <label className=\"text-sm font-medium text-gray-700\">\n                    联网搜索\n                  </label>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.networking}\n                    onChange={(e) => updateSetting('networking', e.target.checked)}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <label className=\"text-sm font-medium text-gray-700\">\n                    显示信息源\n                  </label>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.sourceNeeded}\n                    onChange={(e) => updateSetting('sourceNeeded', e.target.checked)}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              {/* 知识库选择 */}\n              <div>\n                <div className=\"flex items-center justify-between mb-2\">\n                  <label className=\"text-sm font-medium text-gray-700\">\n                    知识库选择\n                  </label>\n                  <button\n                    onClick={fetchKnowledgeBases}\n                    disabled={loading}\n                    className=\"text-xs text-blue-600 hover:text-blue-800 disabled:opacity-50\"\n                  >\n                    {loading ? '刷新中...' : '刷新'}\n                  </button>\n                </div>\n                \n                {knowledgeBases.length > 0 ? (\n                  <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n                    {knowledgeBases.map((kb) => (\n                      <div key={kb.kbId} className=\"flex items-center space-x-2\">\n                        <input\n                          type=\"checkbox\"\n                          id={kb.kbId}\n                          checked={settings.kbIds.includes(kb.kbId)}\n                          onChange={() => toggleKnowledgeBase(kb.kbId)}\n                          className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                        />\n                        <label htmlFor={kb.kbId} className=\"text-sm text-gray-700 flex-1\">\n                          {kb.kbName}\n                        </label>\n                        <span className={`text-xs px-2 py-1 rounded ${\n                          kb.status === 1 ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n                        }`}>\n                          {kb.status === 1 ? '就绪' : '处理中'}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"text-sm text-gray-500\">\n                    {loading ? '加载中...' : '暂无知识库'}\n                  </p>\n                )}\n              </div>\n\n              {/* 当前配置摘要 */}\n              <div className=\"pt-3 border-t border-gray-200\">\n                <p className=\"text-xs text-gray-500\">\n                  当前配置: {settings.model}, {settings.maxToken} tokens\n                  {settings.kbIds.length > 0 && `, ${settings.kbIds.length} 个知识库`}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAyBe,SAAS,aAAa,EAAE,gBAAgB,EAAE,YAAY,EAAE,EAAqB;;IAC1F,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB;QACrD,OAAO;QACP,UAAU;QACV,cAAc;QACd,YAAY;QACZ,cAAc;QACd,OAAO,EAAE;IACX;IACA,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE;IACxE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,UAAU;IACV,MAAM,sBAAsB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;yDAAE;YACtC,WAAW;YACX,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,IAAI,SAAS,EAAE,EAAE;oBACf,MAAM,OAAO,MAAM,SAAS,IAAI;oBAChC,IAAI,KAAK,OAAO,IAAI,KAAK,cAAc,EAAE;wBACvC,kBAAkB,KAAK,cAAc;wBAErC,+BAA+B;wBAC/B,MAAM,UAAU,KAAK,cAAc,CAAC,IAAI;qFAAC,CAAC,KAAsB,GAAG,MAAM,KAAK;;wBAC9E,IAAI,WAAW,SAAS,KAAK,CAAC,MAAM,KAAK,GAAG;4BAC1C,QAAQ,GAAG,CAAC,wCAAwC,QAAQ,IAAI,EAAE,QAAQ,MAAM;4BAChF;iFAAY,CAAA,OAAQ,CAAC;wCACnB,GAAG,IAAI;wCACP,OAAO;4CAAC,QAAQ,IAAI;yCAAC;oCACvB,CAAC;;wBACH;oBACF;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,oCAAoC;YACpD,SAAU;gBACR,WAAW;YACb;QACF;wDAAG;QAAC,SAAS,KAAK;KAAC;IAEnB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR;QACF;iCAAG;QAAC;KAAoB;IAExB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,iBAAiB;QACnB;iCAAG;QAAC;QAAU;KAAiB;IAE/B,MAAM,gBAAgB,CACpB,KACA;QAEA,YAAY,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,IAAI,EAAE;YAAM,CAAC;IAChD;IAEA,MAAM,sBAAsB,CAAC;QAC3B,YAAY,CAAA,OAAQ,CAAC;gBACnB,GAAG,IAAI;gBACP,OAAO,KAAK,KAAK,CAAC,QAAQ,CAAC,QACvB,KAAK,KAAK,CAAC,MAAM,CAAC,CAAA,KAAM,OAAO,QAC/B;uBAAI,KAAK,KAAK;oBAAE;iBAAK;YAC3B,CAAC;IACH;IAEA,qBACE,6LAAC;QAAI,WAAW,CAAC,SAAS,EAAE,WAAW;;0BAErC,6LAAC;gBACC,SAAS,IAAM,UAAU,CAAC;gBAC1B,WAAU;gBACV,OAAM;0BAEN,cAAA,6LAAC;oBAAI,WAAU;oBAAU,MAAK;oBAAO,QAAO;oBAAe,SAAQ;;sCACjE,6LAAC;4BAAK,eAAc;4BAAQ,gBAAe;4BAAQ,aAAa;4BAAG,GAAE;;;;;;sCACrE,6LAAC;4BAAK,eAAc;4BAAQ,gBAAe;4BAAQ,aAAa;4BAAG,GAAE;;;;;;;;;;;;;;;;;YAKxE,wBACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAsC;;;;;;8CACpD,6LAAC;oCACC,SAAS,IAAM,UAAU;oCACzB,WAAU;8CAEV,cAAA,6LAAC;wCAAI,WAAU;wCAAU,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDACjE,cAAA,6LAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;sCAK3E,6LAAC;4BAAI,WAAU;;8CAEb,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAA+C;;;;;;sDAGhE,6LAAC;4CACC,OAAO,SAAS,KAAK;4CACrB,UAAU,CAAC,IAAM,cAAc,SAAS,EAAE,MAAM,CAAC,KAAK;4CACtD,WAAU;sDAET,OAAO,OAAO,CAAC,0HAAA,CAAA,mBAAgB,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,iBACjD,6LAAC;oDAAiB,OAAO,MAAM,IAAI;;wDAChC,MAAM,IAAI;wDAAC;wDAAI,MAAM,WAAW;;mDADtB;;;;;;;;;;;;;;;;8CAQnB,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;;gDAA+C;gDACnD,SAAS,QAAQ;;;;;;;sDAE9B,6LAAC;4CACC,MAAK;4CACL,KAAI;4CACJ,KAAI;4CACJ,MAAK;4CACL,OAAO,SAAS,QAAQ;4CACxB,UAAU,CAAC,IAAM,cAAc,YAAY,SAAS,EAAE,MAAM,CAAC,KAAK;4CAClE,WAAU;;;;;;sDAEZ,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;8DAAK;;;;;;8DACN,6LAAC;8DAAK;;;;;;;;;;;;;;;;;;8CAKV,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;8DAAoC;;;;;;8DAGrD,6LAAC;oDACC,MAAK;oDACL,SAAS,SAAS,YAAY;oDAC9B,UAAU,CAAC,IAAM,cAAc,gBAAgB,EAAE,MAAM,CAAC,OAAO;oDAC/D,WAAU;;;;;;;;;;;;sDAId,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;8DAAoC;;;;;;8DAGrD,6LAAC;oDACC,MAAK;oDACL,SAAS,SAAS,UAAU;oDAC5B,UAAU,CAAC,IAAM,cAAc,cAAc,EAAE,MAAM,CAAC,OAAO;oDAC7D,WAAU;;;;;;;;;;;;sDAId,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;8DAAoC;;;;;;8DAGrD,6LAAC;oDACC,MAAK;oDACL,SAAS,SAAS,YAAY;oDAC9B,UAAU,CAAC,IAAM,cAAc,gBAAgB,EAAE,MAAM,CAAC,OAAO;oDAC/D,WAAU;;;;;;;;;;;;;;;;;;8CAMhB,6LAAC;;sDACC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;8DAAoC;;;;;;8DAGrD,6LAAC;oDACC,SAAS;oDACT,UAAU;oDACV,WAAU;8DAET,UAAU,WAAW;;;;;;;;;;;;wCAIzB,eAAe,MAAM,GAAG,kBACvB,6LAAC;4CAAI,WAAU;sDACZ,eAAe,GAAG,CAAC,CAAC,mBACnB,6LAAC;oDAAkB,WAAU;;sEAC3B,6LAAC;4DACC,MAAK;4DACL,IAAI,GAAG,IAAI;4DACX,SAAS,SAAS,KAAK,CAAC,QAAQ,CAAC,GAAG,IAAI;4DACxC,UAAU,IAAM,oBAAoB,GAAG,IAAI;4DAC3C,WAAU;;;;;;sEAEZ,6LAAC;4DAAM,SAAS,GAAG,IAAI;4DAAE,WAAU;sEAChC,GAAG,MAAM;;;;;;sEAEZ,6LAAC;4DAAK,WAAW,CAAC,0BAA0B,EAC1C,GAAG,MAAM,KAAK,IAAI,gCAAgC,iCAClD;sEACC,GAAG,MAAM,KAAK,IAAI,OAAO;;;;;;;mDAdpB,GAAG,IAAI;;;;;;;;;iEAoBrB,6LAAC;4CAAE,WAAU;sDACV,UAAU,WAAW;;;;;;;;;;;;8CAM5B,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAE,WAAU;;4CAAwB;4CAC5B,SAAS,KAAK;4CAAC;4CAAG,SAAS,QAAQ;4CAAC;4CAC1C,SAAS,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,EAAE,EAAE,SAAS,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASjF;GAtOwB;KAAA","debugId":null}},
    {"offset": {"line": 521, "column": 0}, "map": {"version":3,"sources":["file:///D:/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%20%282%29/src/components/ChatInterface.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useCallback } from 'react';\nimport { ChatMessage, LoadingState } from '@/types';\nimport { generateId } from '@/lib/utils';\nimport ChatSettings, { ChatSettings as ChatSettingsType } from './ChatSettings';\n\ninterface ChatInterfaceProps {\n  className?: string;\n}\n\nexport default function ChatInterface({ className = '' }: ChatInterfaceProps) {\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState<LoadingState>('idle');\n  const [error, setError] = useState<string | null>(null);\n  const [chatSettings, setChatSettings] = useState<ChatSettingsType>({\n    model: 'QAnything 4o mini',\n    maxToken: 1024,\n    hybridSearch: false,\n    networking: false, // 默认关闭联网，与示例保持一致\n    sourceNeeded: true,\n    kbIds: [],\n  });\n\n  const [useDirectMode, setUseDirectMode] = useState(true); // 恢复直接模式\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  // 使用useRef来避免状态更新竞争条件\n  const streamingRef = useRef<{\n    accumulatedResponse: string;\n    assistantMessageId: string;\n    isComplete: boolean;\n  }>({\n    accumulatedResponse: '',\n    assistantMessageId: '',\n    isComplete: false,\n  });\n\n  // 处理设置变化\n  const handleSettingsChange = useCallback((settings: ChatSettingsType) => {\n    setChatSettings(settings);\n  }, []);\n\n  // 使用updater函数确保状态更新的正确性\n  const updateStreamingMessage = useCallback((messageId: string, content: string, sources?: ChatMessage['sources']) => {\n    setMessages(prev =>\n      prev.map(msg =>\n        msg.id === messageId\n          ? { ...msg, content, sources }\n          : msg\n      )\n    );\n  }, []);\n\n\n\n  // 发送消息\n  const sendMessage = async () => {\n    if (!input.trim() || loading === 'loading') return;\n\n    const userMessage: ChatMessage = {\n      id: generateId(),\n      type: 'user',\n      content: input.trim(),\n      timestamp: new Date(),\n    };\n\n    // 先获取当前的历史消息（在添加新消息之前）\n    const currentMessages = messages;\n\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setLoading('loading');\n    setError(null);\n\n    // 创建助手消息\n    const assistantMessage: ChatMessage = {\n      id: generateId(),\n      type: 'assistant',\n      content: '',\n      timestamp: new Date(),\n    };\n\n    setMessages(prev => [...prev, assistantMessage]);\n\n    // 初始化流式状态\n    streamingRef.current = {\n      accumulatedResponse: '',\n      assistantMessageId: assistantMessage.id,\n      isComplete: false,\n    };\n\n    try {\n      // 准备历史记录（最近2轮对话，只包含完整的问答对）\n      const history: Array<{ question: string; response: string }> = [];\n\n      // 使用添加新消息前的消息列表来构建历史\n      const historicalMessages = currentMessages;\n\n      // 按顺序遍历历史消息，寻找完整的问答对\n      for (let i = 0; i < historicalMessages.length; i++) {\n        const currentMsg = historicalMessages[i];\n\n        // 如果是用户消息，寻找下一个助手消息\n        if (currentMsg.type === 'user') {\n          // 寻找对应的助手回复\n          for (let j = i + 1; j < historicalMessages.length; j++) {\n            const nextMsg = historicalMessages[j];\n            if (nextMsg.type === 'assistant' && nextMsg.content.trim().length > 0) {\n              history.push({\n                question: currentMsg.content,\n                response: nextMsg.content,\n              });\n              break; // 找到对应回复后跳出内层循环\n            }\n          }\n        }\n      }\n\n      // 只保留最近的2轮对话\n      const recentHistory = history.slice(-2);\n\n      // 检查是否选择了知识库\n      if (chatSettings.kbIds.length === 0) {\n        setMessages(prev =>\n          prev.map(msg =>\n            msg.id === assistantMessage.id\n              ? { ...msg, content: '请先在设置中选择一个知识库，然后再提问。点击右上角的设置按钮选择知识库。' }\n              : msg\n          )\n        );\n        setLoading('error');\n        return;\n      }\n\n      const requestData = {\n        question: userMessage.content,\n        kbIds: chatSettings.kbIds, // 使用设置中的知识库ID\n        history: recentHistory,\n        model: chatSettings.model,\n        maxToken: chatSettings.maxToken,\n        hybridSearch: chatSettings.hybridSearch,\n        networking: chatSettings.networking,\n        sourceNeeded: chatSettings.sourceNeeded,\n      };\n\n      // 根据设置选择API端点\n      const apiEndpoint = useDirectMode ? '/api/qanything/stream-direct' : '/api/qanything/stream';\n\n      const response = await fetch(apiEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestData),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      // 基于Vercel AI SDK最佳实践的简化流式处理\n      const reader = response.body?.getReader();\n      if (!reader) {\n        throw new Error('无法读取响应流');\n      }\n\n      const decoder = new TextDecoder();\n      let buffer = '';\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read();\n          if (done) break;\n\n          // 将新数据添加到缓冲区\n          buffer += decoder.decode(value, { stream: true });\n\n          // 按行分割处理\n          const lines = buffer.split('\\n');\n\n          // 保留最后一行（可能不完整）\n          buffer = lines.pop() || '';\n\n          for (const line of lines) {\n            if (line.startsWith('data:')) {\n              try {\n                const jsonStr = line.slice(5).trim();\n                if (!jsonStr) continue;\n\n                const data = JSON.parse(jsonStr);\n                const errorCode = parseInt(data.errorCode, 10);\n\n                if (errorCode === 0 && data.result) {\n                  // 跳过最终chunk（包含question、history、source的chunk）以避免重复显示\n                  if (data.result.question && data.result.history && data.result.source) {\n                    console.log('Skipping final chunk to avoid duplication');\n                    continue;\n                  }\n\n                  // 只处理增量chunk\n                  if (data.result.response) {\n                    streamingRef.current.accumulatedResponse += data.result.response;\n\n                    // 立即更新UI\n                    updateStreamingMessage(\n                      streamingRef.current.assistantMessageId,\n                      streamingRef.current.accumulatedResponse,\n                      data.result.source\n                    );\n                  }\n                } else if (errorCode !== 0) {\n                  // 处理错误响应\n                  const errorMessage = data.result?.response || data.msg || 'QAnything API error';\n                  updateStreamingMessage(\n                    streamingRef.current.assistantMessageId,\n                    errorMessage\n                  );\n                  setError(data.msg || 'QAnything API error');\n                  setLoading('error');\n                  return;\n                }\n              } catch (parseError) {\n                console.warn('Failed to parse SSE data:', line, parseError);\n              }\n            }\n          }\n        }\n      } finally {\n        reader.releaseLock();\n      }\n\n      // 检查是否收到了任何响应内容\n      if (!streamingRef.current.accumulatedResponse) {\n        setMessages(prev =>\n          prev.map(msg =>\n            msg.id === assistantMessage.id\n              ? { ...msg, content: '抱歉，我没有找到相关的回答。请尝试重新表述您的问题或检查知识库设置。' }\n              : msg\n          )\n        );\n      }\n\n      setLoading('success');\n    } catch (error) {\n      console.error('Chat error:', error);\n      const errorMessage = error instanceof Error ? error.message : '发生未知错误';\n      setError(errorMessage);\n      \n      // 更新助手消息为错误信息\n      setMessages(prev => \n        prev.map(msg => \n          msg.id === assistantMessage.id \n            ? { ...msg, content: `抱歉，处理您的请求时出现了错误：${errorMessage}` }\n            : msg\n        )\n      );\n      \n      setLoading('error');\n    }\n  };\n\n  // 处理键盘事件\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  // 清空聊天记录\n  const clearChat = () => {\n    setMessages([]);\n    setError(null);\n    setLoading('idle');\n  };\n\n  return (\n    <div className={`flex flex-col h-full bg-white rounded-lg shadow-lg ${className}`}>\n      {/* 头部 */}\n      <div className=\"flex items-center justify-between p-4 border-b border-yellow-200 bg-yellow-50\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-8 h-8 bg-gradient-to-r from-yellow-400 to-yellow-600 rounded-lg flex items-center justify-center\">\n            {/* SVG图标保持不变 */}\n          </div>\n          <div>\n            <h3 className=\"text-lg font-semibold text-yellow-800\">AI 问答助手</h3>\n            <p className=\"text-sm text-yellow-600\">基于 QAnything 大语言模型</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <ChatSettings onSettingsChange={handleSettingsChange} />\n\n          {/* 性能模式切换 */}\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-xs text-gray-600\">\n              {useDirectMode ? '直接模式' : '代理模式'}\n            </span>\n            <button\n              onClick={() => setUseDirectMode(!useDirectMode)}\n              className={`relative inline-flex h-5 w-9 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-[#1a365d] focus:ring-offset-2 ${\n                useDirectMode ? 'bg-[#1a365d]' : 'bg-gray-200'\n              }`}\n              title={useDirectMode ? '当前：直接模式（最佳性能）' : '当前：代理模式（可能有延迟）'}\n            >\n              <span\n                className={`inline-block h-3 w-3 transform rounded-full bg-white transition-transform ${\n                  useDirectMode ? 'translate-x-5' : 'translate-x-1'\n                }`}\n              />\n            </button>\n          </div>\n\n          <button\n            onClick={clearChat}\n            className=\"px-3 py-1 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-md transition-colors\"\n          >\n            清空对话\n          </button>\n        </div>\n      </div>\n\n      {/* 消息列表 */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {messages.length === 0 ? (\n          <div className=\"text-center text-gray-500 py-8\">\n            <svg className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n            </svg>\n            <p>开始与 AI 助手对话吧！</p>\n            <p className=\"text-sm mt-1\">您可以询问任何问题，我会尽力为您解答。</p>\n          </div>\n        ) : (\n          messages.map((message) => (\n            <div\n              key={message.id}\n              className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n            >\n              <div\n                className={`max-w-[80%] rounded-lg px-4 py-2 ${message.type === 'user' ? 'bg-yellow-500 text-white' : 'bg-gray-100 text-gray-900'}`}\n              >\n                <div className=\"whitespace-pre-wrap\">{message.content}</div>\n                {message.sources && message.sources.length > 0 && (\n                  <div className=\"mt-2 pt-2 border-t border-gray-200\">\n                    <p className=\"text-xs text-gray-500 mb-1\">信息来源：</p>\n                    {message.sources.map((source, index) => (\n                      <div key={index} className=\"text-xs text-gray-600 mb-1\">\n                        <span className=\"font-medium\">{source.fileName}</span>\n                        <span className=\"ml-2 text-gray-400\">置信度: {parseFloat(source.score).toFixed(2)}</span>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          ))\n        )}\n        \n        {loading === 'loading' && (\n          <div className=\"flex justify-start\">\n            <div className=\"bg-gray-100 rounded-lg px-4 py-2\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n                <span className=\"text-gray-600\">AI 正在思考...</span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* 错误提示 */}\n      {error && (\n        <div className=\"mx-4 mb-2 p-3 bg-red-50 border border-red-200 rounded-lg\">\n          <div className=\"flex items-center space-x-2 text-red-700\">\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <span className=\"text-sm\">{error}</span>\n          </div>\n        </div>\n      )}\n\n      {/* 输入区域 */}\n      <div className=\"p-4 border-t border-gray-200\">\n        <div className=\"flex space-x-2\">\n          <textarea\n            ref={inputRef}\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"输入您的问题...\"\n            className=\"flex-1 resize-none border border-yellow-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:border-transparent\"\n            rows={1}\n            disabled={loading === 'loading'}\n          />\n          <button\n            onClick={sendMessage}\n            disabled={!input.trim() || loading === 'loading'}\n            className=\"px-4 py-2 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}