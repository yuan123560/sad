{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///D:/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%20%282%29/src/app/api/qanything/kb-list/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\n\n// GET /api/qanything/kb-list - 获取知识库列表\nexport async function GET() {\n  try {\n    const apiKey = process.env.QANYTHING_API_KEY;\n    if (!apiKey) {\n      return NextResponse.json(\n        { success: false, error: 'QAnything API Key not configured' },\n        { status: 500 }\n      );\n    }\n\n    const response = await fetch('https://openapi.youdao.com/q_anything/api/kb_list', {\n      method: 'GET',\n      headers: {\n        'Authorization': apiKey,\n      },\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      return NextResponse.json(\n        { success: false, error: `Failed to fetch knowledge bases: ${errorText}` },\n        { status: response.status }\n      );\n    }\n\n    const data = await response.json();\n    \n    if (data.errorCode != 0) {\n      return NextResponse.json(\n        { success: false, error: data.msg || 'Failed to fetch knowledge bases' },\n        { status: 500 }\n      );\n    }\n\n    // 为每个知识库获取状态信息\n    const knowledgeBasesWithStatus = await Promise.all(\n      (data.result || []).map(async (kb: {kbId: string; kbName: string}) => {\n        try {\n          // 查询FAQ列表来判断知识库状态\n          const faqResponse = await fetch(`https://openapi.youdao.com/q_anything/api/faq_list?kbId=${kb.kbId}&pageSize=1`, {\n            method: 'GET',\n            headers: {\n              'Authorization': apiKey,\n            },\n          });\n\n          let status = 0; // 默认状态：空知识库\n          if (faqResponse.ok) {\n            const faqData = await faqResponse.json();\n            if (faqData.errorCode == 0 && faqData.result?.faqList?.length > 0) {\n              // 检查是否有已处理完成的FAQ\n              const processedFAQs = faqData.result.faqList.filter((faq: {status: number}) => faq.status === 1);\n              status = processedFAQs.length > 0 ? 1 : 0; // 1: 有可用内容, 0: 处理中或空\n            }\n          }\n\n          return {\n            kbId: kb.kbId,\n            kbName: kb.kbName,\n            status,\n          };\n        } catch (error) {\n          console.error(`Failed to get status for KB ${kb.kbId}:`, error);\n          return {\n            kbId: kb.kbId,\n            kbName: kb.kbName,\n            status: 0, // 默认状态\n          };\n        }\n      })\n    );\n\n    return NextResponse.json({\n      success: true,\n      knowledgeBases: knowledgeBasesWithStatus,\n    });\n\n  } catch (error) {\n    console.error('Knowledge base list error:', error);\n    return NextResponse.json(\n      {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n      },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,QAAQ,GAAG,CAAC,iBAAiB;QAC5C,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAmC,GAC5D;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,WAAW,MAAM,MAAM,qDAAqD;YAChF,QAAQ;YACR,SAAS;gBACP,iBAAiB;YACnB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO,CAAC,iCAAiC,EAAE,WAAW;YAAC,GACzE;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAE9B;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,KAAK,SAAS,IAAI,GAAG;YACvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO,KAAK,GAAG,IAAI;YAAkC,GACvE;gBAAE,QAAQ;YAAI;QAElB;QAEA,eAAe;QACf,MAAM,2BAA2B,MAAM,QAAQ,GAAG,CAChD,CAAC,KAAK,MAAM,IAAI,EAAE,EAAE,GAAG,CAAC,OAAO;YAC7B,IAAI;gBACF,kBAAkB;gBAClB,MAAM,cAAc,MAAM,MAAM,CAAC,wDAAwD,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE;oBAC/G,QAAQ;oBACR,SAAS;wBACP,iBAAiB;oBACnB;gBACF;gBAEA,IAAI,SAAS,GAAG,YAAY;gBAC5B,IAAI,YAAY,EAAE,EAAE;oBAClB,MAAM,UAAU,MAAM,YAAY,IAAI;oBACtC,IAAI,QAAQ,SAAS,IAAI,KAAK,QAAQ,MAAM,EAAE,SAAS,SAAS,GAAG;wBACjE,iBAAiB;wBACjB,MAAM,gBAAgB,QAAQ,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAA0B,IAAI,MAAM,KAAK;wBAC9F,SAAS,cAAc,MAAM,GAAG,IAAI,IAAI,GAAG,qBAAqB;oBAClE;gBACF;gBAEA,OAAO;oBACL,MAAM,GAAG,IAAI;oBACb,QAAQ,GAAG,MAAM;oBACjB;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,CAAC,4BAA4B,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE;gBACzD,OAAO;oBACL,MAAM,GAAG,IAAI;oBACb,QAAQ,GAAG,MAAM;oBACjB,QAAQ;gBACV;YACF;QACF;QAGF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,gBAAgB;QAClB;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD,GACA;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}